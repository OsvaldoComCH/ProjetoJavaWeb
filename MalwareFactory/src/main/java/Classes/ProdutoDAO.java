package Classes;

import java.sql.*;
import java.util.ArrayList;

public class ProdutoDAO
{
	private Connection DataBase;
	
	public ProdutoDAO(Connection DataBase)
	{
		this.DataBase = DataBase;
	}
	
	public boolean Insert(Produto P)
	{
		try
		{
			String Sql = "Insert Into Produtos(Nome, Descricao, Estoque, Preco) Values (?,?,?,?)";
			PreparedStatement SqlStatement = DataBase.prepareStatement(Sql);
			SqlStatement.setString(1, P.Nome);
			SqlStatement.setString(2, P.Descricao);
			SqlStatement.setInt(3, P.Estoque);
			SqlStatement.setFloat(4, (float) P.Preco);
			int Lines = SqlStatement.executeUpdate();
			System.out.println("Comandos concluidos com êxito. Linhas afetadas: " + Lines);
			SqlStatement.close();
		}
		catch(Exception E)
		{
			System.out.println("Erro ao adicionar produto ao banco de dados.");
			E.printStackTrace();
			return false;
		}
		return true;
	}
	public boolean Update(int IDProduto, String Nome, String Descricao, int Estoque, double Preco)
	{
		try
		{
			String Sql = "Update Produtos Set Nome = ?, Descricao = ?, Estoque = ?, Preco = ? Where IDProduto = ?";
			PreparedStatement SqlStatement = DataBase.prepareStatement(Sql);
			SqlStatement.setString(1, Nome);
			SqlStatement.setString(2, Descricao);
			SqlStatement.setInt(3, Estoque);
			SqlStatement.setFloat(4, (float) Preco);
			SqlStatement.setInt(5, IDProduto);
			int Lines = SqlStatement.executeUpdate();
			System.out.println("Comandos concluidos com êxito. Linhas afetadas: " + Lines);
			SqlStatement.close();
		}
		catch(Exception E)
		{
			System.out.println("Erro ao adicionar produto ao banco de dados.");
			E.printStackTrace();
			return false;
		}
		return true;
	}
	public boolean Delete(int IDProduto)
	{
		try
		{
			String Sql = "Delete From Produtos Where IDProduto = ?";
			PreparedStatement SqlStatement = DataBase.prepareStatement(Sql);
			SqlStatement.setInt(1, IDProduto);
			int Lines = SqlStatement.executeUpdate();
			System.out.println("Comandos concluidos com êxito. Linhas afetadas: " + Lines);
			SqlStatement.close();
		}
		catch(Exception E)
		{
			System.out.println("Erro ao remover produto do banco de dados.");
			E.printStackTrace();
			return false;
		}
		return true;
	}
	public ArrayList<Produto> Select()
	{
		try
		{
			String Sql = "Select * From Produtos";
			PreparedStatement SqlStatement = DataBase.prepareStatement(Sql);
			ResultSet rs = SqlStatement.executeQuery();
			ArrayList<Produto> Produtos = new ArrayList<Produto>();
			rs.next();
			//while(true)
			do
			{
				/*if(rs.isLast())
				{
					break;
				}*/
				Produto P = new Produto(rs.getInt(1), rs.getString(2), rs.getString(3),
						rs.getInt(4), rs.getDouble(5));
				Produtos.add(P);
				//rs.next();
			}
			while(rs.next());
			rs.close();
			SqlStatement.close();
			return Produtos;
		}
		catch(Exception E)
		{
			System.out.println("Erro ao buscar dados do banco.");
			E.printStackTrace();
			return null;
		}
	}
	public Produto Select(int IDProduto)
	{
		try
		{
			String Sql = "Select * From Produtos Where IDProduto = ?";
			PreparedStatement SqlStatement = DataBase.prepareStatement(Sql);
			SqlStatement.setInt(1, IDProduto);
			ResultSet rs = SqlStatement.executeQuery();
			rs.next();
			Produto P = new Produto(rs.getInt(1), rs.getString(2), rs.getString(3), rs.getInt(4), rs.getDouble(5));
			rs.close();
			SqlStatement.close();
			return P;
		}
		catch(Exception E)
		{
			System.out.println("Erro ao buscar dados do banco.");
			E.printStackTrace();
			return null;
		}
	}
}